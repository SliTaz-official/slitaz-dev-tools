# Tazchroot configuration file.
# Allows you to build a chrooted cooking environnment using the last
# available package version.

# Use SliTaz version.
SLITAZ_VERSION=cooking

# SLITAZ_DIR (it's mounted on chroot).
SLITAZ_DIR=/home/slitaz

# Chroot path.
chroot_dir=$SLITAZ_DIR/$SLITAZ_VERSION/sandbox

# Online repository path.
# Actually Pankso provides a mirror of packages being cooked on tank,
# waiting to have them on http://mirror.slitaz.org/packages/cooking
MIRROR=http://people.slitaz.org/~pankso/packages/

# Default SliTaz paths.
LOCALSTATE=/var/lib/tazpkg
INSTALLED=$LOCALSTATE/installed

# Webserver path.
# Defines where the webserver should be located.
# You have to use the same setup inside & outside the chroot.
# Here we use the default setup.
# The host system needs php installed to make it work.
# Uncomment the following line to use this option.
WEBSERVER="/var/www/vhosts/bb"

# Default scripts path (these scripts are added to the
# $chroot_dir/usr/bin and can be called with tazchroot script)
script_dir="/usr/lib/slitaz/chroot-scripts/tazchroot"

# List of directories to mount.
# They are mounted to an equivalent location in the chroot.
# (one per line)
list_dir="$SLITAZ_DIR
$WEBSERVER"

create_chroot()
{
	# Warning message.
	echo -en "\\033[1;31mWarning:\\033[0m this script is going to use another packages repository other \
than the one you generally use. Please don't install packages until the chroot is created or it will \
screw your main system. Don't continue to run this script if you're installing something.

Continue to run (type 'yes' to continue) ? " | fold -s; read answer
	[ "$answer" = yes ] || exit

	if [ -f "$LOCALSTATE/priotity" ]; then
		mv $LOCALSTATE/priotity $LOCALSTATE/priority.tmp-bak
	fi
	tazpkg add-undigest tmp.$SLITAZ_VERSION.mirror "$MIRROR"
	echo "tmp.$SLITAZ_VERSION.mirror" > /var/lib/tazpkg/priority
	tazpkg recharge

	# Install needed packages.
	mkdir -p $chroot_dir
	tazpkg get-install busybox --root="$chroot_dir"
	tazpkg get-install tazchroot --root="$chroot_dir"
	tazpkg get-install tazpkg --root="$chroot_dir"
	tazpkg get-install tazwok --root="$chroot_dir"
	tazpkg get-install libtaz --root="$chroot_dir"

	rm -r $LOCALSTATE/undigest/tmp.$SLITAZ_VERSION.mirror
	if [ -f "$LOCALSTATE/priotity.tmp-bak" ]; then
		mv -f $LOCALSTATE/priotity.tmp-bak $LOCALSTATE/priority
	fi
	tazpkg recharge

	echo -e "\\033[1;31mWarning:\\033[0m Your SliTaz repository configuration is now \
back to a normal state." | fold -s
}

mount_chroot()
{
	# resolv.conf is needed to have network access into chroot.
	cp -a /etc/resolv.conf "$chroot_dir/etc/resolv.conf"

	# Setup mirror for chroot.
	echo "$MIRROR" > "$chroot_dir/var/lib/tazpkg/mirror"

	# Setup release.
	echo "$SLITAZ_VERSION" > "$chroot_dir/etc/slitaz-release"

	# Webserver setup.
	if [ "$WEBSERVER" ]; then
		mkdir -p /usr/lib/slitaz
		[ -d /usr/share/slitaz/web-bb ] || [ -L /usr/share/slitaz/web-bb ] ||
		ln -s $chroot_dir/usr/share/slitaz/web-bb /usr/share/slitaz/web-bb

		# Make tazwok act as if php/lighttpd were installed into the sandbox.
		mkdir -p $chroot_dir$INSTALLED/php
		mkdir -p $chroot_dir$INSTALLED/lighttpd
	fi
	
	# Mount system directories.
	mount -o bind /proc $chroot_dir/proc
	mount -o bind /sys $chroot_dir/sys
	mount -o bind /dev/pts $chroot_dir/dev/pts
	mount -o bind /dev/shm $chroot_dir/dev/shm

	# Mount directories of LIST_DIR.
	# Create them if needed to avoid errors.
	for dir in $list_dir; do
		mkdir -p $dir
		mkdir -p $chroot_dir$dir
		mount $dir $chroot_dir$dir
	done
}

umount_chroot()
{
	# First umount directories of LIST_DIR.
	for dir in $list_dir; do
		umount $chroot_dir$dir
	done

	# Then umount system directories.
	umount $chroot_dir/dev/shm
	umount $chroot_dir/dev/pts
	umount $chroot_dir/sys
	umount $chroot_dir/proc
}
